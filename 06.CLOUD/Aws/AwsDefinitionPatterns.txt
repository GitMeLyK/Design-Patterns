

Cosa sono i modelli di progettazione del cloud AWS?

	AWS Cloud Design Patterns (CDP) è una raccolta di soluzioni e idee di progettazione per 
	l'utilizzo della tecnologia cloud AWS per risolvere problemi comuni di progettazione di sistemi. 
	
	Per creare i CDP, abbiamo esaminato molti progetti creati da vari architetti cloud, 
	li abbiamo classificati in base al tipo di problema che hanno affrontato e quindi creato 
	modelli di progettazione generici basati su tali soluzioni specifiche. 
	
	Alcuni di questi problemi potrebbero anche essere affrontati utilizzando la tecnologia 
	tradizionale del data center, ma abbiamo incluso soluzioni cloud per questi problemi 
	a causa del costo inferiore e della maggiore flessibilità di una soluzione basata su cloud.

	Per maggiorni approfondimenti su ogni singolo pattern individuato in AWS
	consultare .: https://en.clouddesignpattern.org/index.php/Main_Page.html


	List of AWS Cloud Design Patterns

		Basic Patterns
			Snapshot Pattern (Data Backups)
			Stamp Pattern (Server Replication)
			Scale Up Pattern (Dynamic Server Spec Up/Down)
			Scale Out Pattern (Dynamically Increasing the Number of Servers)
			On-demand Disk Pattern (Dynamically Increasing/Decreasing Disk Capacity)

		Patterns for High Availability
			Multi-Server Pattern (Server Redundancy)
			Multi-Datacenter Pattern (Redundancy on the Data Center Level)
			Floating IP Pattern (Floating IP Address)
			Deep Health Check Pattern (System Health Check)
			Patterns for Processing Dynamic Content
			Clone Server Pattern (Cloning a Server)
			NFS Sharing Pattern (Using Shared Content)
			NFS Replica Pattern (Replicating Shared Content)
			State Sharing Pattern (Sharing State Information)
			URL Rewriting Pattern (Saving Static Content)
			Rewrite Proxy Pattern (Proxy Setup for URL Overwriting)
			Cache Proxy Pattern (Cache Provisioning)
			Scheduled Scale Out Pattern ( Increasing or Decreasing the Number of Servers Following a Schedule)

		Patterns for Processing Static Content
			Web Storage Pattern (Use of High-Availability Internet Storage)
			Direct Hosting Pattern (Direct Hosting Using Internet Storage)
			Private Distribution Pattern (Data Delivery to Specified Users)
			Cache Distribution Pattern (Locating Data in a Location That Is Physically Near to the User)
			Rename Distribution Pattern (Delivery Without Update Delay)

		Patterns for Uploading Data
			Write Proxy Pattern (High-Speed Uploading to Internet Storage)
			Storage Index Pattern (Increasing the Efficiency of Internet Storage)
			Direct Object Upload Pattern (Simplifying the Upload Procedure)

		Patterns for Relational Database
			DB Replication Pattern (Replicating Online Databases)
			Read Replica Pattern (Load Distribution through Read Replicas)
			Inmemory DB Cache Pattern (Caching High-Frequency Data)
			Sharding Write Pattern (Improving Efficiency in Writing)

		Patterns for Batch Processing
			Queuing Chain Pattern (Loose-Coupling of Systems)
			Priority Queue pattern (Changing Priorities)
			Job Observer Pattern (Job Monitoring and Adding/Deleting Servers)
			Scheduled Autoscaling Pattern (Turning Batch Servers On and Off Automatically)

		Pattern for Operation and Maintenance
			Bootstrap Pattern (Automatic Acquisition of Startup Settings)
			Cloud DI Pattern (External Placement of Parts That Are Frequently Updated)
			Stack Deployment Pattern (Creating a Template for Setting up Groups of Servers)
			Server Swapping Pattern (Transferring Servers)
			Monitoring Integration Pattern (Centralization of Monitoring Tools)
			Web Storage Archive Pattern (Archiving Large Volumes of Data)
			Weighted Transition Pattern (Transitioning Using a Weighted Round Robin DNS)
			Hybrid Backup Pattern (Using the Cloud for Backups)

		Patterns for Network
			OnDemand NAT Pattern (Changing Internet Settings at the Time of Maintenance)
			Backnet Pattern (Establishment of a Management Network)
			Functional Firewall Pattern (Multi-Tier Access Control)
			Operational Firewall Pattern (Controlling Access by Individual Function)
			Multi Load Balancer Pattern (Setting Up Multiple Load Balancers)
			WAF Proxy Pattern (Effective Use of a Costly Web Application Firewalls)
			CloudHub Pattern (Setting Up VPN Sites)